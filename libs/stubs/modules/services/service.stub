import { Injectable } from '@nestjs/common';
import { $$CLASS$$Repository } from '../repositories/$$FILENAME$$.repository';
import { $$CLASS$$Entity } from '../entities/$$FILENAME$$.entity';
import { PaginationCollection } from '@hodfords/typeorm-helper';
import { Create$$CLASS$$Dto } from '../dto/create-$$FILENAME$$.dto';
import { PaginationParams } from '@hodfords/nestjs-base-decorator';

@Injectable()
export class $$CLASS$$Service {
    public constructor(private $$PROPERTY$$Repo: $$CLASS$$Repository) {}

    async findById(id: string): Promise<$$CLASS$$Entity> {
        return this.$$PROPERTY$$Repo.findById(id);
    }

    async list(page: PaginationParams): Promise<PaginationCollection<$$CLASS$$Entity>> {
        return this.$$PROPERTY$$Repo.pagination({}, page);
    }

    async create(data: Create$$CLASS$$Dto): Promise<$$CLASS$$Entity> {
        return this.$$PROPERTY$$Repo.createOne(data);
    }

    async update(id: string, data: Create$$CLASS$$Dto): Promise<void> {
        await this.$$PROPERTY$$Repo.update(id, data);
    }

    async destroy(id: string): Promise<void> {
        await this.$$PROPERTY$$Repo.delete(id);
    }
}
